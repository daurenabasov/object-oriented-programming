class Rectangle {
  private _width; // с помощью модификатора мы сделали приватными за пределами мы достучаться к ним не сможем, нижние подчеркивание свойство в JS и TS это некое соглашение которое указывает что свойство приватное, при том что все свойства в классе тоже делают приватными
  private _height;

  constructor(w, h) {
    this._width = w;
    this._height = h;
  }

  public get width() {
    // если явно не указывать модификатор доступа, то по умолчанию он остается публичным, но лучше всего указывать
    return this._width; // чтобы получить доступ к этим свойствам, то есть получать или изменять создаются геттеры и сеттеры. Точнее с помощью геттера мы можем вернуть свойство обьекта
  }
  public set width(value) {
    // с помощью сеттера мы можем присвоить новое значение, либо сделать какие то дополнительные действия
    if (value <= 0) {
      this._width = 1;
    } else {
      this._width = value;
    }
  }

  calcArea() {
    return this._width * this._height;
  }
}

const rect = new Rectangle(5, 10); // при этом мы аргументами передаем ширину и высоту
const rect1 = new Rectangle(4, 50); // при этом из любого класса мы можем создать столько обьектов сколько нам понадобится
const rect2 = new Rectangle(532, 70);
const rect3 = new Rectangle(51, 320);
rect.calcArea(); // у вызвонного обьекта мы можем вызвать его метод который вернет нам площадь
rect.width = -1;
console.log(rect);
